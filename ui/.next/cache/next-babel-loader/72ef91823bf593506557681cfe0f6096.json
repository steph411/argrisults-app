{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lioneletaba/Documents/Projets/Perso/argrisults-app/ui/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import Head from 'next/head'\nimport { Header, Hero, MainContent, NewsletterSub, Footer, MapModal } from '../components';\nimport { getDailyWeather, getForecasts } from '../services';\nimport React, { useState } from 'react';\nimport { appContext } from '../context';\nexport default function Home({\n  dailyWeather,\n  forecasts\n}) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    showMap: false\n  });\n\n  const toggleShowMap = () => setState(old => _objectSpread(_objectSpread({}, old), {}, {\n    showMap: !old.showMap\n  }));\n\n  const {\n    0: appData,\n    1: setAppData\n  } = useState({\n    dailyWeather,\n    forecasts\n  });\n  const {\n    0: {\n      lon,\n      lat\n    },\n    1: setLonLat\n  } = useState({\n    lon: \"12.354722\",\n    lat: \"7.369722\"\n  });\n\n  const closeModal = () => {\n    setState(old => ({\n      showMap: false\n    }));\n  };\n\n  const updateLonLat = async (lat, lon) => {\n    try {\n      const dailyWeather = await getDailyWeather(lat, lon);\n      const forecasts = await getForecasts(lat, lon);\n      setAppData(old => ({\n        dailyWeather,\n        forecasts\n      }));\n      setState(old => _objectSpread(_objectSpread({}, old), {}, {\n        showMap: false\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(appContext.Provider, {\n    value: {\n      showMap: state.showMap,\n      toggleShowMap: toggleShowMap\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      dailyWeather: appData.dailyWeather,\n      forecasts: appData.forecasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewsletterSub, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), state.showMap && /*#__PURE__*/_jsxDEV(MapModal, {\n      updateLonLat: updateLonLat,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  try {\n    const defaultLat = \"7.369722\";\n    const defaultLon = \"12.354722\";\n    const dailyWeather = await getDailyWeather(defaultLat, defaultLon);\n    const forecasts = await getForecasts(defaultLat, defaultLon);\n    return {\n      props: {\n        dailyWeather,\n        forecasts\n      }\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      props: {}\n    };\n  }\n};","map":{"version":3,"sources":["/Users/lioneletaba/Documents/Projets/Perso/argrisults-app/ui/pages/index.tsx"],"names":["Header","Hero","MainContent","NewsletterSub","Footer","MapModal","getDailyWeather","getForecasts","React","useState","appContext","Home","dailyWeather","forecasts","state","setState","showMap","toggleShowMap","old","appData","setAppData","lon","lat","setLonLat","closeModal","updateLonLat","error","console","log","getServerSideProps","context","defaultLat","defaultLon","props"],"mappings":"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","sourcesContent":["// import Head from 'next/head'\nimport {GetServerSideProps} from 'next'\nimport { Header, Hero, MainContent,NewsletterSub, Footer, MapModal }  from '../components'\nimport { getDailyWeather, getForecasts} from '../services'\nimport React, {useState} from 'react'\nimport { appContext } from '../context'\n  \n\nexport default function Home({ dailyWeather, forecasts }) {\n  \n  const [state, setState] = useState({showMap: false})\n  const toggleShowMap = () => setState((old) => ({...old, showMap:!old.showMap}))\n\n  const [appData, setAppData] = useState({ dailyWeather, forecasts });\n  const [{ lon, lat }, setLonLat] = useState({ lon: \"12.354722\", lat: \"7.369722\" })\n  \n  const closeModal = () => {\n    setState(old => ({showMap: false}))\n  }\n\n  const updateLonLat = async (lat, lon) => {\n    try {\n      \n      const dailyWeather = await getDailyWeather(lat, lon);\n      const forecasts = await getForecasts(lat, lon);\n      setAppData(old => ({ dailyWeather, forecasts }));\n      setState((old) => ({ ...old, showMap: false }));\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <appContext.Provider value={{showMap: state.showMap, toggleShowMap:toggleShowMap}}>\n      <Header />\n      <Hero/>\n      <MainContent\n        dailyWeather={appData.dailyWeather}\n        forecasts={appData.forecasts}\n      />\n      <NewsletterSub/>\n      <Footer />\n      {state.showMap && <MapModal updateLonLat={updateLonLat} closeModal={closeModal}/>}\n    </appContext.Provider>\n  )\n\n}\n\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  try {\n    \n    const defaultLat = \"7.369722\"\n    const defaultLon = \"12.354722\"\n    const dailyWeather = await getDailyWeather(defaultLat, defaultLon);\n    const forecasts = await getForecasts(defaultLat, defaultLon);\n  \n    return {\n      props: {\n        dailyWeather,\n        forecasts\n      }\n    }\n  } catch (error) {\n    console.log(error)\n    return {\n      props:{}\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}