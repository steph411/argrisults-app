{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from \"node-fetch\";\nvar tokenUrl = \"https://api.awhere.com/oauth/token\";\nvar baseApiUrl = process.env.BASE_API_URL;\n\nvar forecastsUrl = function forecastsUrl(lat, lon) {\n  return \"\".concat(baseApiUrl, \"/weather/locations/\").concat(lat, \",\").concat(lon, \"/forecasts\");\n};\n\nvar dailyWeatherUrl = function dailyWeatherUrl(lat, lon) {\n  var date = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var result = \"\".concat(baseApiUrl, \"/weather/locations/\").concat(lat, \",\").concat(lon, \"/forecasts\");\n\n  if (date) {\n    result = \"\".concat(result, \"/\").concat(date);\n  }\n\n  return result;\n};\n\nexport var getForecasts = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lat, lon) {\n    var access_token, url, req, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getAccessToken();\n\n          case 2:\n            access_token = _context.sent;\n            url = forecastsUrl(lat, lon);\n            _context.next = 6;\n            return fetch(url, {\n              headers: {\n                Authorization: \"Bearer \".concat(access_token)\n              }\n            });\n\n          case 6:\n            req = _context.sent;\n            _context.next = 9;\n            return req.json();\n\n          case 9:\n            res = _context.sent;\n            console.log(res);\n            return _context.abrupt(\"return\", res.forecasts);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getForecasts(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getDailyWeather = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(lat, lon) {\n    var date, formattedDate, access_token, url, req, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            date = new Date();\n            formattedDate = date.toISOString().split(\"T\")[0];\n            _context2.next = 4;\n            return getAccessToken();\n\n          case 4:\n            access_token = _context2.sent;\n            url = dailyWeatherUrl(lat, lon, formattedDate);\n            _context2.next = 8;\n            return fetch(url, {\n              headers: {\n                Authorization: \"Bearer \".concat(access_token)\n              }\n            });\n\n          case 8:\n            req = _context2.sent;\n            _context2.next = 11;\n            return req.json();\n\n          case 11:\n            res = _context2.sent;\n            console.log(res);\n            return _context2.abrupt(\"return\", res.forecast[0]);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getDailyWeather(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getAccessToken = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var api_key, api_secret, encodedKey, req, res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            api_key = process.env.AWHERE_KEY;\n            api_secret = process.env.AWHERE_SECRET;\n            encodedKey = Buffer.from(\"\".concat(api_key, \":\").concat(api_secret)).toString(\"base64\");\n            _context3.next = 5;\n            return fetch(tokenUrl, {\n              method: \"POST\",\n              body: \"grant_type=client_credentials\",\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                Authorization: \"Basic \".concat(encodedKey)\n              }\n            });\n\n          case 5:\n            req = _context3.sent;\n            console.log(req);\n            _context3.next = 9;\n            return req.json();\n\n          case 9:\n            res = _context3.sent;\n            console.log(res);\n            return _context3.abrupt(\"return\", res.access_token);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getAccessToken() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/lioneletaba/Documents/Projets/Perso/argrisults-app/ui/services/index.ts"],"names":["fetch","tokenUrl","baseApiUrl","process","env","BASE_API_URL","forecastsUrl","lat","lon","dailyWeatherUrl","date","result","getForecasts","getAccessToken","access_token","url","headers","Authorization","req","json","res","console","log","forecasts","getDailyWeather","Date","formattedDate","toISOString","split","forecast","api_key","AWHERE_KEY","api_secret","AWHERE_SECRET","encodedKey","Buffer","from","toString","method","body"],"mappings":"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","sourcesContent":["import fetch from  \"node-fetch\"\n\n\nconst tokenUrl = \"https://api.awhere.com/oauth/token\"\nconst baseApiUrl = process.env.BASE_API_URL\nconst forecastsUrl = (lat, lon) => `${baseApiUrl}/weather/locations/${lat},${lon}/forecasts`\nconst dailyWeatherUrl = (lat, lon, date=\"\") => {\n  let result = `${baseApiUrl}/weather/locations/${lat},${lon}/forecasts`\n  if (date){\n    result = `${result}/${date}`\n  }\n  return result;\n\n}\n\n  \n\n\nexport const getForecasts = async (lat, lon) => {\n  const access_token = await getAccessToken();\n  const url = forecastsUrl(lat, lon);\n  const req = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  })\n  const res = await req.json()\n  console.log(res)\n  return res.forecasts\n}\n\n\nexport const getDailyWeather = async (lat, lon) => {\n  let date = new Date();\n  const formattedDate = date.toISOString().split(\"T\")[0];\n  const access_token = await getAccessToken();\n  const url = dailyWeatherUrl(lat, lon, formattedDate);\n  const req = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  })\n  const res = await req.json()\n  console.log(res)\n  return res.forecast[0]\n}\n\n\n\n\n\n\nconst getAccessToken = async () => {\n  const api_key = process.env.AWHERE_KEY;\n  const api_secret = process.env.AWHERE_SECRET;\n  const encodedKey = Buffer.from(`${api_key}:${api_secret}`).toString(\"base64\");\n  const req = await fetch(tokenUrl, {\n    method: \"POST\",\n    body: \"grant_type=client_credentials\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${encodedKey}`\n    }\n  })\n  console.log(req)\n  const res  = await req.json()\n  console.log(res);\n  return res.access_token\n}"]},"metadata":{},"sourceType":"module"}