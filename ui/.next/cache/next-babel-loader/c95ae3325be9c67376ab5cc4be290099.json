{"ast":null,"code":"import * as d3 from 'd3';\nexport var drawChart = function drawChart(formattedData, chartRef) {\n  var hour = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var labels = formattedData.map(function (el) {\n    return el.label;\n  });\n  var values = formattedData.map(function (el) {\n    return el.value;\n  });\n  var containerHeight = chartRef.current.clientHeight;\n  var containerWidth = chartRef.current.clientWidth;\n  console.log({\n    containerWidth: containerWidth,\n    containerHeight: containerHeight\n  });\n  var svg = d3.select(chartRef.current).append(\"svg\") // .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  // .attr(\"viewBox\", \"0 0 300 300\")\n  .attr(\"width\", containerWidth).attr(\"height\", containerHeight).classed(\"svg-content\", true);\n  var selection = svg.selectAll(\"rect\").data(values);\n  var yScale = d3.scaleLinear().domain([0, d3.max(values)]) // .range([containerHeight, 0])\n  .range([0, containerHeight - 50]); // add axis and labels\n\n  var xDateScale = d3.scalePoint().domain(labels).range([0, containerWidth - 3]);\n  svg.append(\"g\").attr(\"transform\", \"translate(0, 0)\") // This controls the vertical position of the Axis\n  .call(d3.axisBottom(xDateScale));\n  var y_axis = d3.axisLeft().scale(yScale);\n  svg.append(\"g\").attr(\"transform\", \"translate(0, 300)\").call(y_axis);\n  selection.transition().duration(300).attr(\"height\", function (d) {\n    return yScale(d);\n  }).attr(\"y\", function (d) {\n    return containerHeight - yScale(d);\n  });\n  selection.enter().append(\"rect\").attr(\"x\", function (d, i) {\n    return i * 31;\n  }).attr(\"y\", function (d) {\n    return containerHeight;\n  }).attr(\"width\", 30).attr(\"height\", 0).attr(\"fill\", \"steelblue\").transition().duration(300).attr(\"height\", function (d) {\n    return yScale(d);\n  }).attr(\"y\", function (d) {\n    return containerHeight - yScale(d);\n  });\n  selection.exit().transition().duration(400).attr(\"y\", function (d) {\n    return containerHeight;\n  }).attr(\"height\", 0).remove();\n};","map":null,"metadata":{},"sourceType":"module"}