{"ast":null,"code":"// import fetch from  \"node-fetch\"\nimport axios from 'axios';\nconst tokenUrl = \"https://api.awhere.com/oauth/token\";\nconst baseApiUrl = \"https://api.awhere.com/v2\";\n\nconst forecastsUrl = (lat, lon) => `${baseApiUrl}/weather/locations/${lat},${lon}/forecasts`;\n\nconst dailyWeatherUrl = (lat, lon, date = \"\") => {\n  let result = `${baseApiUrl}/weather/locations/${lat},${lon}/forecasts`;\n\n  if (date) {\n    result = `${result}/${date}`;\n  }\n\n  return result;\n};\n\nexport const getForecasts = async (lat, lon, accessToken = undefined) => {\n  let access_token = accessToken;\n\n  if (!accessToken) {\n    access_token = await getAccessToken();\n  }\n\n  const url = forecastsUrl(lat, lon);\n  console.log({\n    apiurl: url\n  });\n  const req = await axios.get(url, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n      \"Access-Control-Allow-Origin\": \"*\" // \"Access-Control-Allow-Methods\": \"*\",\n      // \"Access-Control-Allow-Headers\": \"*\"\n\n    }\n  });\n  const res = await req.data;\n  console.log(res);\n  return res.forecasts;\n};\nexport const getDailyWeather = async (lat, lon, accessToken = undefined) => {\n  let access_token = accessToken;\n\n  if (!accessToken) {\n    access_token = await getAccessToken();\n  }\n\n  let date = new Date();\n  const formattedDate = date.toISOString().split(\"T\")[0];\n  const url = dailyWeatherUrl(lat, lon, formattedDate);\n  const req = await axios.get(url, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n      \"Access-Control-Allow-Origin\": \"*\" // \"Access-Control-Allow-Methods\": \"*\",\n      // \"Access-Control-Allow-Headers\": \"*\"\n\n    }\n  });\n  const res = await req.data;\n  console.log(res);\n  return res.forecast[0];\n};\nexport const getAccessToken = async () => {\n  const api_key = process.env.AWHERE_KEY;\n  const api_secret = process.env.AWHERE_SECRET;\n  const encodedKey = Buffer.from(`${api_key}:${api_secret}`).toString(\"base64\");\n  const req = await axios.post(tokenUrl, \"grant_type=client_credentials\", {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${encodedKey}`,\n      \"Access-Control-Allow-Methods\": \"*\",\n      \"Access-Control-Allow-Headers\": \"*\"\n    }\n  });\n  console.log(req);\n  const res = await req.data;\n  console.log(res);\n  return res.access_token;\n};","map":{"version":3,"sources":["/Users/lioneletaba/Documents/Projets/Perso/argrisults-app/ui/services/index.ts"],"names":["axios","tokenUrl","baseApiUrl","forecastsUrl","lat","lon","dailyWeatherUrl","date","result","getForecasts","accessToken","undefined","access_token","getAccessToken","url","console","log","apiurl","req","get","headers","Authorization","res","data","forecasts","getDailyWeather","Date","formattedDate","toISOString","split","forecast","api_key","process","env","AWHERE_KEY","api_secret","AWHERE_SECRET","encodedKey","Buffer","from","toString","post"],"mappings":"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","sourcesContent":["// import fetch from  \"node-fetch\"\nimport axios from 'axios'\n\nconst tokenUrl = \"https://api.awhere.com/oauth/token\"\nconst baseApiUrl = \"https://api.awhere.com/v2\"\nconst forecastsUrl = (lat, lon) => `${baseApiUrl}/weather/locations/${lat},${lon}/forecasts`\nconst dailyWeatherUrl = (lat, lon, date=\"\") => {\n  let result = `${baseApiUrl}/weather/locations/${lat},${lon}/forecasts`\n  if (date){\n    result = `${result}/${date}`\n  }\n  return result;\n\n}\n\n  \n\n\nexport const getForecasts = async (lat, lon, accessToken=undefined) => {\n  \n  let access_token = accessToken;\n  if (!accessToken) {\n    access_token = await getAccessToken(); \n  }\n  const url = forecastsUrl(lat, lon);\n  console.log({apiurl: url})\n  const req = await axios.get(url, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n      \"Access-Control-Allow-Origin\": \"*\",\n      // \"Access-Control-Allow-Methods\": \"*\",\n      // \"Access-Control-Allow-Headers\": \"*\"\n    }\n  })\n  const res = await req.data\n  console.log(res)\n  return res.forecasts\n}\n\n\nexport const getDailyWeather = async (lat, lon, accessToken = undefined) => {\n  let access_token = accessToken;\n  if (!accessToken) {\n    access_token = await getAccessToken(); \n  }\n  let date = new Date();\n  const formattedDate = date.toISOString().split(\"T\")[0];\n  const url = dailyWeatherUrl(lat, lon, formattedDate);\n  const req = await axios.get(url, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n      \"Access-Control-Allow-Origin\": \"*\",\n      // \"Access-Control-Allow-Methods\": \"*\",\n      // \"Access-Control-Allow-Headers\": \"*\"\n    }\n  })\n  const res = await req.data\n  console.log(res)\n  return res.forecast[0]\n}\n\n\n\n\n\n\nexport const getAccessToken = async () => {\n  const api_key = process.env.AWHERE_KEY;\n  const api_secret = process.env.AWHERE_SECRET;\n  const encodedKey = Buffer.from(`${api_key}:${api_secret}`).toString(\"base64\");\n  const req = await axios.post(tokenUrl, \"grant_type=client_credentials\", {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${encodedKey}`,\n      \"Access-Control-Allow-Methods\": \"*\",\n      \"Access-Control-Allow-Headers\": \"*\"\n    }\n  })\n  console.log(req)\n  const res  = await req.data\n  console.log(res);\n  return res.access_token\n}"]},"metadata":{},"sourceType":"module"}