{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import Head from 'next/head'\nimport { Header, Hero, MainContent, NewsletterSub, Footer, MapModal } from '../components';\nimport { getDailyWeather, getForecasts } from '../services';\nimport React, { useState } from 'react';\nimport { appContext } from '../context';\nexport default function Home({\n  dailyWeather,\n  forecasts\n}) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    showMap: false\n  });\n\n  const toggleShowMap = () => setState(old => _objectSpread(_objectSpread({}, old), {}, {\n    showMap: !old.showMap\n  }));\n\n  const {\n    0: appData,\n    1: setAppData\n  } = useState({\n    dailyWeather,\n    forecasts\n  });\n  const {\n    0: {\n      lon,\n      lat\n    },\n    1: setLonLat\n  } = useState({\n    lon: \"12.354722\",\n    lat: \"7.369722\"\n  });\n\n  const closeModal = () => {\n    setState(old => ({\n      showMap: false\n    }));\n  };\n\n  const updateLonLat = async (lat, lon) => {\n    try {\n      const dailyWeather = await getDailyWeather(lat, lon);\n      const forecasts = await getForecasts(lat, lon);\n      setAppData(old => ({\n        dailyWeather,\n        forecasts\n      }));\n      setState(old => _objectSpread(_objectSpread({}, old), {}, {\n        showMap: false\n      }));\n    } catch (error) {\n      console.log(error);\n      setState(old => _objectSpread(_objectSpread({}, old), {}, {\n        showMap: false\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(appContext.Provider, {\n    value: {\n      showMap: state.showMap,\n      toggleShowMap: toggleShowMap\n    },\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Hero, {}), /*#__PURE__*/_jsx(MainContent, {\n      dailyWeather: appData.dailyWeather,\n      forecasts: appData.forecasts\n    }), /*#__PURE__*/_jsx(NewsletterSub, {}), /*#__PURE__*/_jsx(Footer, {}), state.showMap && /*#__PURE__*/_jsx(MapModal, {\n      updateLonLat: updateLonLat,\n      closeModal: closeModal\n    })]\n  });\n}\nexport const getServerSideProps = async context => {\n  try {\n    const defaultLat = \"7.369722\";\n    const defaultLon = \"12.354722\";\n    const dailyWeather = await getDailyWeather(defaultLat, defaultLon);\n    const forecasts = await getForecasts(defaultLat, defaultLon);\n    return {\n      props: {\n        dailyWeather,\n        forecasts\n      }\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      props: {}\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}